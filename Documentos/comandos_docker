#Docker comandos básicos

#Docker con Mysql

#Volumenes
----------
docker volume create <volumeNameOrId>  
docker volume ls    #lista los volumenes creados
docker volume rm <volumeNameOrId>
docker volume inspect <volumeNameOrId>
docker volume prune    #borrar todos los volúmenes que no estén siendo usados por contenedores

#Ejemplos
docker volume create mysql-data
docker volume inspect mysql-data

#Pulls
------------
docker pull {nombreImagen}:[tag]

#Ejemplos Pulls
docker pull mysql/mysql-server:5.6
docker pull mysql:5.7

#Builds
--------
docker build -t {nombreTag:<version>} .[/directorio]  #construye un contenedor nombrado <nombreTag:version>, buscando el archivo Dockerfile en el directorio ./

#Ejemplos Builds
docker build -t atareao/chiquito:latest .
docker build -t iprofile-frontend:latest .
docker build -t iprofile-backend:latest ./iprofile-backend


#Docker-Compose
docker compose up #busca y ejecuta el archivo docker-compose.yml en el directorio actual ./
docker-compose down # baja los servicios
docker-compose logs -f <nombre servicio en docker-compose.yml> # para ver los log del arrojados por las aplicaciones en el servicio

#Runs
------------
#Ejemplos con Imagenes MySQL

✅ 1. Descargar e iniciar contenedor de MySQL

docker run --name mysql-container -e MYSQL_ROOT_PASSWORD=admin123 -p 3306:3306 -d mysql:latest

--name mysql-container: nombre del contenedor.

-e MYSQL_ROOT_PASSWORD=admin123: define la contraseña del usuario root.

-p 3306:3306: expone el puerto 3306 del contenedor a tu máquina local.

-d: ejecuta el contenedor en segundo plano (detached).

mysql:latest: la imagen de MySQL que se descargará (si no la tienes, Docker la bajará).

✅ 2. Verificar si está corriendo

docker ps

CONTAINER ID   IMAGE          ...   PORTS
abc123         mysql:latest   ...   0.0.0.0:3306->3306/tcp

✅ 3. Conectarte al contenedor (opcional)
Para acceder a la consola de MySQL dentro del contenedor:

docker exec -it mysql-container mysql -uroot -p
Te pedirá la contraseña (admin123) y abrirá el cliente MySQL.

✅ 4. Parar el contenedor

docker stop mysql-container
✅ 5. Reiniciar el contenedor

docker start mysql-container

✅ 6. Eliminar el contenedor (opcional)

docker rm -f mysql-container

⚠️ Nota:
Por defecto, los datos no persisten si eliminas el contenedor. Si deseas que los datos persistan, necesitas montar un volumen:

docker run --name mysql-nopass \
  -e MYSQL_ALLOW_EMPTY_PASSWORD=yes \
  -p 3306:3306 \
  -d mysql:latest

docker run --name mi_contenedor_mysql \
  -e MYSQL_ALLOW_EMPTY_PASSWORD=yes \
  -p 3306:3306 \
  -d mysql:latest

--otros

docker run -d -p 33060:3306 --name mysql-db  -e MYSQL_ROOT_PASSWORD=secret --mount src=mysql-db-data,dst=/var/lib/mysql mysql:latest   #descarga (si no existe ) la ultima version mysql y ejecuta la imagen en un contenedor

docker run --name mysql-db-5.6 -e MYSQL_ROOT_PASSWORD=almaveloz --mount src=mysql-db-data-5.6,dst=/var/lib/mysql -d mysql/mysql-server:5.6

docker run --name mi_contenedor_mysql -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=almaveloz mysql:latest  

docker run -p 33060:3306 --rm -dit -e MYSQL_ROOT_PASSWORD=almaveloz --mount src=mysql-data,dst=/var/lib/mysql --name mi_mysql_cont mysql:5.7  # (*) más abajo el comando para conectarse desde consola




docker run -p 8080:80 --name iprofile-frontend -d iprofile-frontend:latest     #proyecto fullstack
docker run -p 3000:3000 --name iprofile-backend -d iprofile-backend:latest

#Execs
----------------
docker exec -it <MySqlContainerNameOrId> mysql -uroot -p #se conecta a la shell de mysql indicando usuario root

docker exec -it <MySqlContainerNameOrId> mysql -p #se conecta a la shell de mysql, con usuario por defecto

docker exec -it <containerNameOrId> bash  #entra al shell de linux del contenedor opcion1

docker exec -it <containerNameOrId> sh     #entra al shell de linux del contenedor opcion2

docker exec -it <containerNameOrId> /bin/bash  #entra al shell de linux del contenedor opcion3

docker exec -it <containerNameOrId> /bin/sh  #entra al shell de linux del contenedor opcion4

#Images
--------------
docker images #lista imagenes

docker images -a #lista todas las imagenes con sus ID

docker rmi <imageNameOrId> #elimina una imagen

docker rmi <imageNameOrId> -f #fuerza eliminar una imagen

docker rmi $(docker images -a -q)  #elimina todas las imagenes


#Containers y procesos
----------------------
docker ps  #lista las instancias

docker ps -a 	#lista todos los contenedores

docker stop <containerNameOrId>   #detiene o baja una instancia

docker start <containerNameOrId>   #inicia una instancia

docker rm <containerNameOrId>      #elimina o desinstala una instancia

docker rm -f <containerNameOrId>   #fuerza eliminar el proceso 





#mysql command
------------
mysql --host=127.0.0.1 --port=33060 --user=root --password=almaveloz		(*)

mysql -h127.0.0.1 -P33060 -uroot -palmaveloz

#Otros
##Para encontrar la IP del contenedor

docker inspect <containerNameOrId> | grep '"IPAddress"' | head -n 1
docker inspect -f "{{ .NetworkSettings.IPAddress }}" <containerNameOrId>
docker inspect -f '{{range.NetworkSettings.Networks}} {{. IPAddress}} {{end}}' name_or_id

#Logs
docker logs --tail 1000 -f 2da713afa281e7b066c4c0b8e2240565eb2b226ebd50dd819f13a42a42e91662 

##DOCKER HUB CUENTA
docker login && docker push gatoencerrado/cheers2019


#Pro tip
#You can push a new image to this repository using the CLI

docker tag local-image:tagname new-repo:tagname
docker push new-repo:tagname

#Ejemplos
#Make sure to change tagname with your desired image repository tag.
docker push gatoencerrado/repo:tagname

##Mios

docker build -t gatoencerrado:q/tutorial-image .
docker run --name tutorial-container -p 80:8080 -d gatoencerrado/tutorial-image 
docker run --name api-node-container -p 80:8080 --link mysql-container:mysqldns -d api-node-image 

#Maven
mvn clean package -X -DskipTests # Limpia la salida de la compilaion del proyecto y luego genera el JAR saltando la ejecucion del Test
#http://barcelonageeks.com/ciclo-de-vida-de-maven-y-comandos-basicos-de-maven/



#MONGO DB

docker run -d \
  --name mongodb \
  -p 27017:27017 \
  -e MONGO_INITDB_ROOT_USERNAME=admin \
  -e MONGO_INITDB_ROOT_PASSWORD=adminpassword \
  mongo:latest
