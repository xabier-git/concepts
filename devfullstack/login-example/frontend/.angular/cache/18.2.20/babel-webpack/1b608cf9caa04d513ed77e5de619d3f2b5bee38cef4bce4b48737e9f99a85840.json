{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { ErrorDialogComponent } from '../error-dialog/error-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/card\";\nfunction LoginComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El nombre de usuario es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La contrase\\u00F1a es obligatoria \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    fb;\n    authService;\n    router;\n    dialog;\n    loginForm;\n    errorMessage = '';\n    constructor(fb, authService, router, dialog) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.dialog = dialog;\n      console.log(\"LoginComponent.constructor()\");\n      this.loginForm = this.fb.group({\n        //email: ['', [Validators.required, Validators.email]],\n        username: ['', [Validators.required]],\n        password: ['', [Validators.required]]\n      });\n    }\n    onSubmit() {\n      console.log(\"LoginComponent.onSubmit(value)\", this.loginForm.value);\n      console.log(\"LoginComponent.onSubmit(valid)\", this.loginForm.valid);\n      if (this.loginForm.valid) {\n        const {\n          username,\n          password\n        } = this.loginForm.value;\n        this.authService.login(username, password).subscribe({\n          next: () => {\n            console.log(\"Login successful\");\n            this.router.navigate(['/home']);\n          },\n          error: err => {\n            this.errorMessage = err.error.message + \" - Status(\" + err.status + \") :\" + err.statusText || 'Error de inicio de sesión';\n            this.openErrorDialog(this.errorMessage);\n            console.error('LoginComponent.onSubmit(error)', err);\n          }\n        });\n      }\n    }\n    openErrorDialog(message) {\n      this.dialog.open(ErrorDialogComponent, {\n        data: {\n          message\n        },\n        width: '400px'\n      });\n    }\n    onRegisterClick() {\n      console.log('Botón \"Regístrate\" clickeado');\n    }\n    ngOnDestroy() {\n      console.log(\"LoginComponent.ngOnDestroy()\");\n      // Aquí puedes limpiar recursos si es necesario\n    }\n    static ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatDialog));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 20,\n      vars: 4,\n      consts: [[3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"mat-button\", \"\", \"routerLink\", \"/register\", \"routerLinkActive\", \"active\", 3, \"click\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\");\n          i0.ɵɵtext(2, \"Iniciar Sesi\\u00F3n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"mat-label\");\n          i0.ɵɵtext(7, \"Nombre de usuario\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 2);\n          i0.ɵɵtemplate(9, LoginComponent_mat_error_9_Template, 2, 0, \"mat-error\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"mat-form-field\", 1)(11, \"mat-label\");\n          i0.ɵɵtext(12, \"Contrase\\u00F1a\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 4);\n          i0.ɵɵtemplate(14, LoginComponent_mat_error_14_Template, 2, 0, \"mat-error\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 5);\n          i0.ɵɵtext(16, \" Iniciar Sesi\\u00F3n \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(17, \"mat-card-actions\")(18, \"a\", 6);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_a_click_18_listener() {\n            return ctx.onRegisterClick();\n          });\n          i0.ɵɵtext(19, \"\\u00BFNo tienes cuenta? Reg\\u00EDstrate\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.hasError(\"required\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [CommonModule, i5.NgIf, RouterModule, i3.RouterLink, i3.RouterLinkActive, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, MatDialogModule, MatSelectModule, i6.MatFormField, i6.MatLabel, i6.MatError, MatInputModule, i7.MatInput, MatButtonModule, i8.MatAnchor, i8.MatButton, MatCardModule, i9.MatCard, i9.MatCardActions, i9.MatCardContent, i9.MatCardTitle, MatFormFieldModule, MatOptionModule]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}