{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.errorMessage = \"\";\n      this.loginForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required]]\n      });\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        const {\n          email,\n          password\n        } = this.loginForm.value;\n        this.authService.login(email, password).subscribe({\n          next: () => {\n            this.router.navigate(['/']);\n          },\n          error: err => {\n            this.errorMessage = 'Invalid credentials';\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 0,\n        vars: 0,\n        template: function LoginComponent_Template(rf, ctx) {}\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}