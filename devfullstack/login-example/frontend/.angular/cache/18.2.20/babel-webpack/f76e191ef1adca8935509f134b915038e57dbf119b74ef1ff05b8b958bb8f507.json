{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    fb;\n    authService;\n    registerForm;\n    constructor(fb, authService) {\n      this.fb = fb;\n      this.authService = authService;\n      this.registerForm = this.fb.group({\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n    }\n    onSubmit() {\n      if (this.registerForm.valid) {\n        this.authService.register(this.registerForm.value).subscribe(response => {\n          // Handle successful registration\n        }, error => {\n          // Handle registration error\n        });\n      }\n    }\n    static ɵfac = function RegisterComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 0,\n      vars: 0,\n      template: function RegisterComponent_Template(rf, ctx) {}\n    });\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}