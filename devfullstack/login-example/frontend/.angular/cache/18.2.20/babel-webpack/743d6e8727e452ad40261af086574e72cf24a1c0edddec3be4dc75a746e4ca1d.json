{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nfunction RegisterComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El nombre de usuario es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La contrase\\u00F1a es obligatoria \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" M\\u00EDnimo 6 caracteres \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Debes confirmar la contrase\\u00F1a \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Las contrase\\u00F1as no coinciden \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    fb;\n    authService;\n    router;\n    registerForm;\n    constructor(fb, authService, router // <-- inyecta aquí el Router\n    ) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      console.log(\"Register.constructor()\");\n      this.registerForm = this.fb.group({\n        username: ['', Validators.required],\n        // email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        role: ['user'] // Puedes cambiar el valor por defecto o hacerlo seleccionable\n      });\n    }\n    onSubmit() {\n      console.log(\"Register.onSubmit()\", this.registerForm.value);\n      if (this.registerForm.valid) {\n        this.authService.register(this.registerForm.value).subscribe({\n          next: response => {\n            alert('Registro exitoso. Ahora puedes iniciar sesión.');\n            this.registerForm.reset();\n            this.router.navigate(['/login']);\n          },\n          error: error => {\n            alert('Error en el registro. Intenta nuevamente.');\n          }\n        });\n      }\n    }\n    ngOnDestroy() {\n      console.log(\"Register.ngOnDestroy()\");\n      // Aquí puedes limpiar recursos si es necesario\n    }\n    static ɵfac = function RegisterComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 32,\n      vars: 7,\n      consts: [[1, \"register-card\"], [3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"confirmPassword\", \"required\", \"\"], [\"formControlName\", \"role\"], [\"value\", \"user\"], [\"value\", \"admin\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-title\");\n          i0.ɵɵtext(2, \"Registro de usuario\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"mat-form-field\", 2)(6, \"mat-label\");\n          i0.ɵɵtext(7, \"Nombre de usuario\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 3);\n          i0.ɵɵtemplate(9, RegisterComponent_mat_error_9_Template, 2, 0, \"mat-error\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"mat-form-field\", 2)(11, \"mat-label\");\n          i0.ɵɵtext(12, \"Contrase\\u00F1a\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 5);\n          i0.ɵɵtemplate(14, RegisterComponent_mat_error_14_Template, 2, 0, \"mat-error\", 4)(15, RegisterComponent_mat_error_15_Template, 2, 0, \"mat-error\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"mat-form-field\", 2)(17, \"mat-label\");\n          i0.ɵɵtext(18, \"Confirmar contrase\\u00F1a\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 6);\n          i0.ɵɵtemplate(20, RegisterComponent_mat_error_20_Template, 2, 0, \"mat-error\", 4)(21, RegisterComponent_mat_error_21_Template, 2, 0, \"mat-error\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"mat-form-field\", 2)(23, \"mat-label\");\n          i0.ɵɵtext(24, \"Rol\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"mat-select\", 7)(26, \"mat-option\", 8);\n          i0.ɵɵtext(27, \"Usuario\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"mat-option\", 9);\n          i0.ɵɵtext(29, \"Administrador\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(30, \"button\", 10);\n          i0.ɵɵtext(31, \" Registrarse \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_1_0.hasError(\"required\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_2_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_3_0.hasError(\"minlength\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_4_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"passwordMismatch\"));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n        }\n      },\n      dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, MatInputModule, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatError, MatButtonModule, i7.MatButton, MatCardModule, i8.MatCard, i8.MatCardContent, i8.MatCardTitle, MatFormFieldModule, MatSelectModule, i9.MatSelect, i10.MatOption, MatOptionModule],\n      styles: [\".register-card[_ngcontent-%COMP%]{max-width:500px;margin:50px auto;padding:20px;box-shadow:0 4px 10px #0003;border-radius:8px}mat-form-field[_ngcontent-%COMP%]{width:100%;margin-bottom:16px}button[_ngcontent-%COMP%]{width:100%;margin-top:16px;font-weight:700}\"]\n    });\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}