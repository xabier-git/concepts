{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { AuthService } from './auth/auth.service';\nimport { Router } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nlet AppComponent = class AppComponent {\n  authService;\n  router;\n  title = 'frontend';\n  username = '';\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  isAuthenticated() {\n    const token = this.authService.getToken();\n    if (token) {\n      // Decodifica el token para obtener el nombre de usuario (opcional)\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      this.username = payload.username || 'User';\n      return true;\n    }\n    return false;\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, MatToolbarModule,\n  // Para la barra de herramientas\n  MatButtonModule // Para los botones],\n  ,\n  // Para los botones],\n  templateUrl, './app.component.html', styleUrls, ['./app.component.css']]\n}), __metadata(\"design:paramtypes\", [AuthService, Router])], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}