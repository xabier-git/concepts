{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { RouterModule } from '@angular/router';\nlet LoginComponent = class LoginComponent {\n  fb;\n  authService;\n  router;\n  dialog;\n  loginForm;\n  errorMessage = '';\n  constructor(fb, authService, router, dialog) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.dialog = dialog;\n    console.log(\"LoginComponent.constructor()\");\n    this.loginForm = this.fb.group({\n      //email: ['', [Validators.required, Validators.email]],\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  onSubmit() {\n    console.log(\"LoginComponent.onSubmit(value)\", this.loginForm.value);\n    console.log(\"LoginComponent.onSubmit(valid)\", this.loginForm.valid);\n    if (this.loginForm.valid) {\n      const {\n        username,\n        password\n      } = this.loginForm.value;\n      this.authService.login(username, password).subscribe({\n        next: () => {\n          this.router.navigate(['/home']);\n        },\n        error: err => {\n          this.errorMessage = 'Invalid credentials';\n          console.error('LoginComponent.onSubmit(error)', err);\n        }\n      });\n    }\n  }\n  onRegisterClick() {\n    console.log('Botón \"Regístrate\" clickeado');\n  }\n  ngOnDestroy() {\n    console.log(\"LoginComponent.ngOnDestroy()\");\n    // Aquí puedes limpiar recursos si es necesario\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, MatDialog, MatInputModule, MatButtonModule, MatCardModule, MatFormFieldModule, MatSelectModule, MatOptionModule],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n}), __metadata(\"design:paramtypes\", [FormBuilder, AuthService, Router, MatDialog])], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}